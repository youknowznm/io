@charset "UTF-8";

.md-tag {
    position: relative;
    padding: 0 6px;
    box-sizing: border-box;
    min-width: 172px;
    margin: 18px 0;
    top: -8px;
    cursor: text;
    .placeholder {
        position: absolute;
        opacity: 0;
        color: rgba(#000, .54);
        top: 8px;
        left: 6px;
        transition: all .4s cubic-bezier(0.25, 0.8, 0.25, 1);
        // IDEA: 这里如果不显式设置 transform-origin 从左侧开始，就需要针对每个元素再进行 transform: translateX() 的改变。origin 这个属性，真屌！
        transform-origin: left;
        cursor: text;
    }
    // 非空时
    &.non-empty {
        .placeholder {
            opacity: 1;
            transform: scale(0.8) translateY(-30px);
            color: rgb(16, 108, 200); //blue
            cursor: default;
        }
    }
    // 获得焦点时
    &.focused {
        .placeholder {
            opacity: 1;
            transform: scale(0.8) translateY(-30px);
            color: rgb(16, 108, 200); //blue
            cursor: default;
        }
        .tag-wrap:after,
        .tag-wrap:before {
            width: calc(50% - 6px);
        }
    }
    .tag-wrap {
        width: 100%;
        height: 32px;
        line-height: 32px;
        background: transparent;
        border-bottom: 1px solid rgba(#000, .12);
        color: rgba(#000, .87);
        padding-bottom: 8px;
        .tag {
            position: relative;
            display: inline-block;
            background-color: rgb(224, 224, 224);
            border-radius: 16px;
            color: rgb(66, 66, 66);
            padding: 0 24px 0 12px;
            margin-right: 8px;
            transition: all .4s cubic-bezier(0.25, 0.8, 0.25, 1);
            font-weight: 500;
            .btn-remove {
                position: absolute;
                top: 3px;
                right: 3px;
                display: block;
                width: 24px;
                height: 24px;
                opacity: 0.6;
                background: url("../../_images/ic_close.png") no-repeat;
                background-size: 24px 24px;
                cursor: pointer;
            }
        }
        ._input {
            display: inline-block;
            padding: 2px 2px 1px 2px;
            border: 0;
            font-size: 16px;
            line-height: 32px;
            background: transparent;
        }
        &:after,
        &:before {
            content: '';
            position: absolute;
            top: 39px;
            height: 2px;
            width: 0;
            transition: all .4s cubic-bezier(0.25, 0.8, 0.25, 1);
            background-color: rgb(16, 108, 200);
        }
        &:after {
            right: 50%;
        }
        &:before {
            left: 50%;
        }
    }
    .error {
        position: absolute;
        line-height: 14px;
        font-size: 12px;
        color: rgb(221, 44, 0); //red
        top: 50px;
        opacity: 0;
        transform: translateY(-10px);
        transition: all .4s cubic-bezier(0.25, 0.8, 0.25, 1);
        &.show {
            transform: translateY(0);
            opacity: 1;
        }
    }
    // 字数统计
    .char-counter {
        position: absolute;
        font-size: 12px;
        line-height: 14px;
        color: rgba(#000, .54);
        top: 46px;
        right: 9px;
        font-weight: normal;
        user-select: none;
        cursor: default;
        transition: all .4s cubic-bezier(0.25, 0.8, 0.25, 1);
        .current {
            margin-right: .5em;
        }
        .maximum {
            margin-left: .5em;
        }
    }
    // 输入内容未通过验证时
    &.invalid {
        .error {
            transform: translateY(0);
            opacity: 1;
        }
        .char-counter,
        .placeholder {
            color: rgb(221, 44, 0) !important; //red
        }
        .tag-wrap {
            border-bottom-color: rgb(221, 44, 0) !important; //red
        }
        .tag-wrap:after,
        .tag-wrap:before {
            background-color: rgb(221, 44, 0) !important; //red
        }
    }
}